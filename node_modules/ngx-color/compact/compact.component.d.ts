import { ColorWrap, zDepth } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './compact-color.component';
import * as ɵngcc2 from './compact-fields.component';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from 'ngx-color';
export declare class CompactComponent extends ColorWrap {
    /** Color squares to display */
    colors: string[];
    zDepth: zDepth;
    radius: number;
    background: string;
    disableAlpha: boolean;
    constructor();
    handleBlockChange({ hex, $event }: {
        hex: any;
        $event: any;
    }): void;
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CompactComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CompactComponent, "color-compact", never, { "colors": "colors"; "zDepth": "zDepth"; "radius": "radius"; "background": "background"; }, {}, never, never>;
}
export declare class ColorCompactModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColorCompactModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorCompactModule, [typeof CompactComponent, typeof ɵngcc1.CompactColorComponent, typeof ɵngcc2.CompactFieldsComponent], [typeof ɵngcc3.CommonModule, typeof ɵngcc4.EditableInputModule, typeof ɵngcc4.SwatchModule, typeof ɵngcc4.RaisedModule], [typeof CompactComponent, typeof ɵngcc1.CompactColorComponent, typeof ɵngcc2.CompactFieldsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorCompactModule>;
}

//# sourceMappingURL=compact.component.d.ts.map