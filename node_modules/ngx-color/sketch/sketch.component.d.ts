import { ColorWrap } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './sketch-fields.component';
import * as ɵngcc2 from './sketch-preset-colors.component';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from 'ngx-color';
export declare class SketchComponent extends ColorWrap {
    /** Remove alpha slider and options from picker */
    disableAlpha: boolean;
    /** Hex strings for default colors at bottom of picker */
    presetColors: string[];
    /** Width of picker */
    width: number;
    activeBackground: string;
    constructor();
    afterValidChange(): void;
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    handleBlockChange({ hex, $event }: {
        hex: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SketchComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SketchComponent, "color-sketch", never, { "disableAlpha": "disableAlpha"; "presetColors": "presetColors"; "width": "width"; }, {}, never, never>;
}
export declare class ColorSketchModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColorSketchModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorSketchModule, [typeof SketchComponent, typeof ɵngcc1.SketchFieldsComponent, typeof ɵngcc2.SketchPresetColorsComponent], [typeof ɵngcc3.CommonModule, typeof ɵngcc4.AlphaModule, typeof ɵngcc4.CheckboardModule, typeof ɵngcc4.EditableInputModule, typeof ɵngcc4.HueModule, typeof ɵngcc4.SaturationModule, typeof ɵngcc4.SwatchModule], [typeof SketchComponent, typeof ɵngcc1.SketchFieldsComponent, typeof ɵngcc2.SketchPresetColorsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorSketchModule>;
}

//# sourceMappingURL=sketch.component.d.ts.map