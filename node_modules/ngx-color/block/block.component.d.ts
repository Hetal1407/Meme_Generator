import { ColorWrap } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './block-swatches.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'ngx-color';
export declare class BlockComponent extends ColorWrap {
    /** Pixel value for picker width */
    width: string | number;
    /** Color squares to display */
    colors: string[];
    triangle: 'top' | 'hide';
    input: {
        [key: string]: string;
    };
    wrap: {
        [key: string]: string;
    };
    disableAlpha: boolean;
    constructor();
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    getContrastingColor(hex: any): "#fff" | "rgba(0,0,0,0.4)" | "#000";
    handleBlockChange({ hex, $event }: {
        hex: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BlockComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BlockComponent, "color-block", never, { "width": "width"; "colors": "colors"; "triangle": "triangle"; }, {}, never, never>;
}
export declare class ColorBlockModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColorBlockModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorBlockModule, [typeof BlockComponent, typeof ɵngcc1.BlockSwatchesComponent], [typeof ɵngcc2.CommonModule, typeof ɵngcc3.CheckboardModule, typeof ɵngcc3.SwatchModule, typeof ɵngcc3.EditableInputModule], [typeof BlockComponent, typeof ɵngcc1.BlockSwatchesComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorBlockModule>;
}

//# sourceMappingURL=block.component.d.ts.map