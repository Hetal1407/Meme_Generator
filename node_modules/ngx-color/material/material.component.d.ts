import { ColorWrap, zDepth } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ngx-color';
export declare class MaterialComponent extends ColorWrap {
    HEXinput: {
        [key: string]: string;
    };
    HEXlabel: {
        [key: string]: string;
    };
    RGBinput: {
        [key: string]: string;
    };
    RGBlabel: {
        [key: string]: string;
    };
    zDepth: zDepth;
    radius: number;
    background: string;
    disableAlpha: boolean;
    constructor();
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    handleInputChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    afterValidChange(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MaterialComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MaterialComponent, "color-material", never, { "zDepth": "zDepth"; "radius": "radius"; "background": "background"; }, {}, never, never>;
}
export declare class ColorMaterialModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColorMaterialModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorMaterialModule, [typeof MaterialComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.EditableInputModule, typeof ɵngcc2.RaisedModule], [typeof MaterialComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorMaterialModule>;
}

//# sourceMappingURL=material.component.d.ts.map