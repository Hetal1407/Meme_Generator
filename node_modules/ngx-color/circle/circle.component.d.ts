import { ColorWrap } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './circle-swatch.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'ngx-color';
export declare class CircleComponent extends ColorWrap {
    /** Pixel value for picker width */
    width: string | number;
    /** Color squares to display */
    colors: string[];
    /** Value for circle size */
    circleSize: number;
    /** Value for spacing between circles */
    circleSpacing: number;
    constructor();
    isActive(color: string): boolean;
    handleBlockChange({ hex, $event }: {
        hex: string;
        $event: Event;
    }): void;
    handleValueChange({ data, $event }: {
        data: any;
        $event: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CircleComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CircleComponent, "color-circle", never, { "width": "width"; "colors": "colors"; "circleSize": "circleSize"; "circleSpacing": "circleSpacing"; }, {}, never, never>;
}
export declare class ColorCircleModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColorCircleModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorCircleModule, [typeof CircleComponent, typeof ɵngcc1.CircleSwatchComponent], [typeof ɵngcc2.CommonModule, typeof ɵngcc3.SwatchModule], [typeof CircleComponent, typeof ɵngcc1.CircleSwatchComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorCircleModule>;
}

//# sourceMappingURL=circle.component.d.ts.map