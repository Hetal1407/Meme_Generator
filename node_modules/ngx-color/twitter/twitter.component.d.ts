import { ColorWrap } from 'ngx-color';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ngx-color';
export declare class TwitterComponent extends ColorWrap {
    /** Pixel value for picker width */
    width: string | number;
    /** Color squares to display */
    colors: string[];
    triangle: 'hide' | 'top-left' | 'top-right' | 'bottom-right';
    swatchStyle: {
        [key: string]: string;
    };
    input: {
        [key: string]: string;
    };
    disableAlpha: boolean;
    constructor();
    focus(color: string): {
        boxShadow: string;
    };
    handleBlockChange({ hex, $event }: any): void;
    handleValueChange({ data, $event }: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TwitterComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TwitterComponent, "color-twitter", never, { "width": "width"; "colors": "colors"; "triangle": "triangle"; }, {}, never, never>;
}
export declare class ColorTwitterModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColorTwitterModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorTwitterModule, [typeof TwitterComponent], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SwatchModule, typeof ɵngcc2.EditableInputModule], [typeof TwitterComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorTwitterModule>;
}

//# sourceMappingURL=twitter.component.d.ts.map